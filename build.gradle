plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'cmc.sp'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.hibernate.orm:hibernate-core'
	implementation 'org.springframework:spring-orm'
	implementation 'org.postgresql:postgresql'

	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation(platform('org.junit:junit-bom:5.10.2'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('create') {
	group = 'database'
	drop.mustRunAfter ':create'
	exec {
		workingDir = "src/main/resources/sql/"
		executable = 'psql'
		args = ['-U', "postgres", '-h', "localhost", '-d', "webprac_test", '-f', "schema.sql"]
		standardInput = new ByteArrayInputStream("1234\n".getBytes())
	}
}

tasks.register('drop') {
	group = 'database'
	exec {
		workingDir = "src/main/resources/sql/"
		executable = 'psql'
		args = ['-U', "postgres", '-h', "localhost", '-d', "webprac_test", '-f', "drop.sql"]
		standardInput = new ByteArrayInputStream("1234\n".getBytes())
	}
}

tasks.register('populate') {
	group = 'database'
	exec {
		workingDir = "src/main/resources/sql/"
		executable = 'psql'
		args = ['-U', "postgres", '-h', "localhost", '-d', "webprac_test", '-f', "data.sql"]
		standardInput = new ByteArrayInputStream("1234\n".getBytes())
	}
}

tasks.register('clear') {
	group = 'database'
	exec {
		workingDir = "src/main/resources/sql/"
		executable = 'psql'
		args = ['-U', "postgres", '-h', "localhost", '-d', "webprac_test", '-f', "clear.sql"]
		standardInput = new ByteArrayInputStream("1234\n".getBytes())
	}
}